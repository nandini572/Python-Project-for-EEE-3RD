# -*- coding: utf-8 -*-
"""Untitled13.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ctptyvwV7PrVGWt3DFLRAJcty4hv5UiS
"""

import matplotlib.pyplot as plt
import numpy as np

# Simulation parameters
setpoint = 100  # Desired motor speed (RPM)
Kp = 0.1       # Proportional gain
Ki = 0.01      # Integral gain
Kd = 0.05      # Derivative gain
dt = 0.1       # Time step for simulation (seconds)
sim_time = 150 # Total simulation time (seconds)

# Initialize variables
integral = 0
previous_error = 0
motor_speed = 0  # Initial motor speed (RPM)

# Store data for plotting
time_data = []
speed_data = []

# Simulation loop
for t in np.arange(0, sim_time, dt):
    # Calculate error
    error = setpoint - motor_speed

    # Proportional term
    P_term = Kp * error

    # Integral term
    integral += error * dt
    I_term = Ki * integral

    # Derivative term
    derivative = (error - previous_error) / dt
    D_term = Kd * derivative

    # Calculate control output
    output = P_term + I_term + D_term

    # Update motor speed (simple model)
    motor_speed += output * dt

    # Store data for plotting
    time_data.append(t)
    speed_data.append(motor_speed)

    # Store error for next iteration
    previous_error = error

# Plot the results
plt.plot(time_data, speed_data)
plt.xlabel("Time (seconds)")
plt.ylabel("Motor Speed (RPM)")
plt.title("DC Motor Speed Control with PID")
plt.grid(True)
plt.show()
